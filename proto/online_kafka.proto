/* Proto definition for kafka messages generated from online system. */

syntax = "proto3";

package tracking_pipeline.online.kafka;

import "common.proto";
import "event.proto";


// reuse message Trajectory from event.proto

message PersonEventVisitCounter {
    string event_uuid = 1;
    string cid = 2;
    OnlineRegion region = 3;  // OnlineRegion is from event.proto
    OnlineEvent.OnlineEventState event_state = 4;
    OnlineEvent.OnlineEventTriggerCause trigger_cause = 5;

    uint64 start_time_msec = 13;
    uint64 end_time_msec = 14;
    uint64 created_time_msec = 15;
}

message PersonEventStayStore {
    string event_uuid = 1;
    string cid = 2;
    OnlineRegion region = 3;  // OnlineRegion is from event.proto
    repeated OnlineDoor doors = 4;  // OnlineDoor is from event.proto
    OnlineEvent.OnlineEventState event_state = 5;
    OnlineEvent.OnlineEventTriggerCause trigger_cause = 6;

    uint64 start_time_msec = 13;
    uint64 end_time_msec = 14;
    uint64 created_time_msec = 15;
}

message PersonEventStayRegion {
    string event_uuid = 1;
    string cid = 2;
    OnlineRegion region = 3;  // OnlineRegion is from event.proto
    OnlineEvent.OnlineEventState event_state = 4;
    OnlineEvent.OnlineEventTriggerCause trigger_cause = 5;

    uint64 start_time_msec = 13;
    uint64 end_time_msec = 14;
    uint64 created_time_msec = 15;
}

message Person {
    string cid = 1;
    CIDPersonTypes cid_person_types = 2;  // CIDPersonTypes is from common.proto
    string group_id = 3;
    // could include extra attribute, like gender, age

    uint64 created_time_msec = 15;
}

message Counting {
    OnlineRegion region = 1;  // OnlineRegion is from event.proto
    repeated LocationInfo location_infos = 2;  // LocationInfo is from event.proto
    repeated PersonCount person_counts = 3;  // PersonCount is from event.proto

    uint64 start_time_msec = 13;
    uint64 end_time_msec = 14;
    uint64 created_time_msec = 15;
}


/********************************** Message Wrapper **********************************/
message UUID {
    string value = 1;
}

message MessageHeader {
    string version = 1;
    string kernel = 2;
    string site_id = 3;

    uint64 created_time_msec = 13;
    uint64 sent_time_msec = 14;
    uint32 retry_times = 15;
}
