# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: event_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import online_event_detection_pb2 as online__event__detection__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='event_service.proto',
  package='tracking_pipeline.online',
  syntax='proto3',
  serialized_options=_b('\n\030com.aibee.mlp.mall.proxyP\001'),
  serialized_pb=_b('\n\x13\x65vent_service.proto\x12\x18tracking_pipeline.online\x1a\x1conline_event_detection.proto\"/\n\x0eReportResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\x0f\n\x07message\x18\x02 \x01(\t2\xa4\x03\n\x0c\x45ventService\x12\x65\n\x0freportDetection\x12&.tracking_pipeline.online.CameraEvents\x1a(.tracking_pipeline.online.ReportResponse\"\x00\x12i\n\x0freportEventPair\x12*.tracking_pipeline.online.ProjectEventPair\x1a(.tracking_pipeline.online.ReportResponse\"\x00\x12^\n\rreportHeatMap\x12!.tracking_pipeline.online.HeatMap\x1a(.tracking_pipeline.online.ReportResponse\"\x00\x12\x62\n\x0freportPassInOut\x12#.tracking_pipeline.online.PassInOut\x1a(.tracking_pipeline.online.ReportResponse\"\x00\x42\x1c\n\x18\x63om.aibee.mlp.mall.proxyP\x01\x62\x06proto3')
  ,
  dependencies=[online__event__detection__pb2.DESCRIPTOR,])




_REPORTRESPONSE = _descriptor.Descriptor(
  name='ReportResponse',
  full_name='tracking_pipeline.online.ReportResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='tracking_pipeline.online.ReportResponse.code', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='tracking_pipeline.online.ReportResponse.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=79,
  serialized_end=126,
)

DESCRIPTOR.message_types_by_name['ReportResponse'] = _REPORTRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ReportResponse = _reflection.GeneratedProtocolMessageType('ReportResponse', (_message.Message,), {
  'DESCRIPTOR' : _REPORTRESPONSE,
  '__module__' : 'event_service_pb2'
  # @@protoc_insertion_point(class_scope:tracking_pipeline.online.ReportResponse)
  })
_sym_db.RegisterMessage(ReportResponse)


DESCRIPTOR._options = None

_EVENTSERVICE = _descriptor.ServiceDescriptor(
  name='EventService',
  full_name='tracking_pipeline.online.EventService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=129,
  serialized_end=549,
  methods=[
  _descriptor.MethodDescriptor(
    name='reportDetection',
    full_name='tracking_pipeline.online.EventService.reportDetection',
    index=0,
    containing_service=None,
    input_type=online__event__detection__pb2._CAMERAEVENTS,
    output_type=_REPORTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='reportEventPair',
    full_name='tracking_pipeline.online.EventService.reportEventPair',
    index=1,
    containing_service=None,
    input_type=online__event__detection__pb2._PROJECTEVENTPAIR,
    output_type=_REPORTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='reportHeatMap',
    full_name='tracking_pipeline.online.EventService.reportHeatMap',
    index=2,
    containing_service=None,
    input_type=online__event__detection__pb2._HEATMAP,
    output_type=_REPORTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='reportPassInOut',
    full_name='tracking_pipeline.online.EventService.reportPassInOut',
    index=3,
    containing_service=None,
    input_type=online__event__detection__pb2._PASSINOUT,
    output_type=_REPORTRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_EVENTSERVICE)

DESCRIPTOR.services_by_name['EventService'] = _EVENTSERVICE

# @@protoc_insertion_point(module_scope)
